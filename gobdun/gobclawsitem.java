/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gobdun;

import every.*;
import java.awt.Color;
import java.util.ArrayList;
/**
 *
 * @author Dad
 */
public class gobclawsitem extends unit {
    
    public gobclawsitem( ArrayList<weapon> weaps, room currentroom )
    {
        super( 1, 1, 1, "blankweap", 510, 420, new noai(), weaps, currentroom, 100, 140 );
        
        buildvil1();
        
        this.setStatement( "You got the spear!  Charge!" );
        this.setName("Goblin Claws");
        
        
        trigger spoke1 = new trigger( false, "gotweap_gobclaws" );
        
        chattrigger chat1 = new chattrigger( constants.truetrigger, spoke1, true );
        
        chat1.addchat( "These extended claws give you a light, rapid attack to slice through an enemy." );
        
        addchattrigger(chat1);
    
    }
    
    
    public void buildvil1()
    {
        figure f = this.getfig();
        
        f.setwidth(26);
        f.setlength(37);
        
        
        
Color sa = new Color(39,39,39);
Color sb = new Color(51,51,51);
Color sc = new Color(27,27,27);
Color sd = new Color(153,153,153);
Color se = new Color(138,138,138);
        
//<editor-fold defaultstate="collapsed" desc="build figure">





setpixel(3, 0, sa);
setpixel(4, 0, sa);
setpixel(5, 0, sa);
setpixel(6, 0, sa);
setpixel(7, 0, sa);
setpixel(8, 0, sa);
setpixel(9, 0, sa);
setpixel(19, 0, sa);
setpixel(20, 0, sa);
setpixel(21, 0, sa);
setpixel(22, 0, sa);
setpixel(23, 0, sa);
setpixel(24, 0, sa);
setpixel(25, 0, sa);
setpixel(2, 1, sa);
setpixel(3, 1, sb);
setpixel(4, 1, sb);
setpixel(5, 1, sb);
setpixel(6, 1, sb);
setpixel(7, 1, sb);
setpixel(8, 1, sb);
setpixel(9, 1, sb);
setpixel(10, 1, sa);
setpixel(18, 1, sa);
setpixel(19, 1, sb);
setpixel(20, 1, sb);
setpixel(21, 1, sb);
setpixel(22, 1, sb);
setpixel(23, 1, sb);
setpixel(24, 1, sb);
setpixel(25, 1, sb);
setpixel(26, 1, sa);
setpixel(2, 2, sb);
setpixel(3, 2, sb);
setpixel(4, 2, sb);
setpixel(5, 2, sb);
setpixel(6, 2, sb);
setpixel(7, 2, sb);
setpixel(8, 2, sb);
setpixel(9, 2, sb);
setpixel(10, 2, sb);
setpixel(18, 2, sb);
setpixel(19, 2, sb);
setpixel(20, 2, sb);
setpixel(21, 2, sb);
setpixel(22, 2, sb);
setpixel(23, 2, sb);
setpixel(24, 2, sb);
setpixel(25, 2, sb);
setpixel(26, 2, sb);
setpixel(2, 3, sb);
setpixel(3, 3, sb);
setpixel(4, 3, sb);
setpixel(5, 3, sb);
setpixel(6, 3, sb);
setpixel(7, 3, sb);
setpixel(8, 3, sb);
setpixel(9, 3, sb);
setpixel(10, 3, sb);
setpixel(18, 3, sb);
setpixel(19, 3, sb);
setpixel(20, 3, sb);
setpixel(21, 3, sb);
setpixel(22, 3, sb);
setpixel(23, 3, sb);
setpixel(24, 3, sb);
setpixel(25, 3, sb);
setpixel(26, 3, sb);
setpixel(2, 4, sb);
setpixel(3, 4, sb);
setpixel(4, 4, sb);
setpixel(5, 4, sb);
setpixel(6, 4, sb);
setpixel(7, 4, sb);
setpixel(8, 4, sb);
setpixel(9, 4, sb);
setpixel(10, 4, sb);
setpixel(18, 4, sb);
setpixel(19, 4, sb);
setpixel(20, 4, sb);
setpixel(21, 4, sb);
setpixel(22, 4, sb);
setpixel(23, 4, sb);
setpixel(24, 4, sb);
setpixel(25, 4, sb);
setpixel(26, 4, sb);
setpixel(2, 5, sb);
setpixel(3, 5, sb);
setpixel(4, 5, sb);
setpixel(5, 5, sb);
setpixel(6, 5, sb);
setpixel(7, 5, sb);
setpixel(8, 5, sb);
setpixel(9, 5, sb);
setpixel(10, 5, sb);
setpixel(18, 5, sb);
setpixel(19, 5, sb);
setpixel(20, 5, sb);
setpixel(21, 5, sb);
setpixel(22, 5, sb);
setpixel(23, 5, sb);
setpixel(24, 5, sb);
setpixel(25, 5, sb);
setpixel(26, 5, sb);
setpixel(0, 6, sa);
setpixel(2, 6, sb);
setpixel(3, 6, sb);
setpixel(4, 6, sb);
setpixel(5, 6, sb);
setpixel(6, 6, sb);
setpixel(7, 6, sb);
setpixel(8, 6, sb);
setpixel(9, 6, sb);
setpixel(10, 6, sb);
setpixel(18, 6, sb);
setpixel(19, 6, sb);
setpixel(20, 6, sb);
setpixel(21, 6, sb);
setpixel(22, 6, sb);
setpixel(23, 6, sb);
setpixel(24, 6, sb);
setpixel(25, 6, sb);
setpixel(26, 6, sb);
setpixel(2, 7, sb);
setpixel(3, 7, sb);
setpixel(4, 7, sb);
setpixel(5, 7, sb);
setpixel(6, 7, sb);
setpixel(7, 7, sb);
setpixel(8, 7, sb);
setpixel(9, 7, sb);
setpixel(19, 7, sb);
setpixel(20, 7, sb);
setpixel(21, 7, sb);
setpixel(22, 7, sb);
setpixel(23, 7, sb);
setpixel(24, 7, sb);
setpixel(25, 7, sb);
setpixel(26, 7, sb);
setpixel(2, 8, sb);
setpixel(3, 8, sb);
setpixel(4, 8, sb);
setpixel(5, 8, sb);
setpixel(6, 8, sb);
setpixel(7, 8, sb);
setpixel(8, 8, sb);
setpixel(9, 8, sb);
setpixel(19, 8, sb);
setpixel(20, 8, sb);
setpixel(21, 8, sb);
setpixel(22, 8, sb);
setpixel(23, 8, sb);
setpixel(24, 8, sb);
setpixel(25, 8, sb);
setpixel(26, 8, sb);
setpixel(2, 9, sb);
setpixel(3, 9, sb);
setpixel(4, 9, sb);
setpixel(5, 9, sb);
setpixel(6, 9, sb);
setpixel(7, 9, sb);
setpixel(8, 9, sb);
setpixel(9, 9, sb);
setpixel(19, 9, sb);
setpixel(20, 9, sb);
setpixel(21, 9, sb);
setpixel(22, 9, sb);
setpixel(23, 9, sb);
setpixel(24, 9, sb);
setpixel(25, 9, sb);
setpixel(26, 9, sb);
setpixel(2, 10, sb);
setpixel(3, 10, sb);
setpixel(4, 10, sb);
setpixel(5, 10, sb);
setpixel(6, 10, sb);
setpixel(7, 10, sb);
setpixel(8, 10, sb);
setpixel(9, 10, sb);
setpixel(19, 10, sb);
setpixel(20, 10, sb);
setpixel(21, 10, sb);
setpixel(22, 10, sb);
setpixel(23, 10, sb);
setpixel(24, 10, sb);
setpixel(25, 10, sb);
setpixel(26, 10, sb);
setpixel(3, 11, sb);
setpixel(4, 11, sb);
setpixel(5, 11, sb);
setpixel(6, 11, sb);
setpixel(7, 11, sb);
setpixel(8, 11, sb);
setpixel(9, 11, sb);
setpixel(19, 11, sb);
setpixel(20, 11, sb);
setpixel(21, 11, sb);
setpixel(22, 11, sb);
setpixel(23, 11, sb);
setpixel(24, 11, sb);
setpixel(25, 11, sb);
setpixel(3, 12, sb);
setpixel(4, 12, sb);
setpixel(5, 12, sb);
setpixel(6, 12, sb);
setpixel(7, 12, sb);
setpixel(8, 12, sb);
setpixel(9, 12, sb);
setpixel(19, 12, sb);
setpixel(20, 12, sb);
setpixel(21, 12, sb);
setpixel(22, 12, sb);
setpixel(23, 12, sb);
setpixel(24, 12, sb);
setpixel(25, 12, sb);
setpixel(3, 13, sb);
setpixel(4, 13, sb);
setpixel(5, 13, sb);
setpixel(6, 13, sb);
setpixel(7, 13, sb);
setpixel(8, 13, sb);
setpixel(20, 13, sb);
setpixel(21, 13, sb);
setpixel(22, 13, sb);
setpixel(23, 13, sb);
setpixel(24, 13, sb);
setpixel(25, 13, sb);
setpixel(3, 14, sb);
setpixel(4, 14, sb);
setpixel(5, 14, sb);
setpixel(6, 14, sb);
setpixel(7, 14, sb);
setpixel(8, 14, sb);
setpixel(20, 14, sb);
setpixel(21, 14, sb);
setpixel(22, 14, sb);
setpixel(23, 14, sb);
setpixel(24, 14, sb);
setpixel(25, 14, sb);
setpixel(3, 15, sb);
setpixel(4, 15, sb);
setpixel(5, 15, sb);
setpixel(6, 15, sb);
setpixel(7, 15, sb);
setpixel(8, 15, sb);
setpixel(20, 15, sb);
setpixel(21, 15, sb);
setpixel(22, 15, sb);
setpixel(23, 15, sb);
setpixel(24, 15, sb);
setpixel(25, 15, sb);
setpixel(3, 16, sb);
setpixel(4, 16, sa);
setpixel(5, 16, sa);
setpixel(6, 16, sa);
setpixel(7, 16, sb);
setpixel(8, 16, sb);
setpixel(20, 16, sb);
setpixel(21, 16, sb);
setpixel(22, 16, sa);
setpixel(23, 16, sa);
setpixel(24, 16, sa);
setpixel(25, 16, sb);
setpixel(3, 17, sa);
setpixel(4, 17, sb);
setpixel(5, 17, sb);
setpixel(6, 17, sb);
setpixel(7, 17, sa);
setpixel(8, 17, sa);
setpixel(20, 17, sa);
setpixel(21, 17, sa);
setpixel(22, 17, sb);
setpixel(23, 17, sb);
setpixel(24, 17, sb);
setpixel(25, 17, sa);
setpixel(3, 18, sb);
setpixel(4, 18, sb);
setpixel(5, 18, sb);
setpixel(6, 18, sb);
setpixel(7, 18, sb);
setpixel(8, 18, sb);
setpixel(9, 18, sb);
setpixel(19, 18, sb);
setpixel(20, 18, sb);
setpixel(21, 18, sb);
setpixel(22, 18, sb);
setpixel(23, 18, sb);
setpixel(24, 18, sb);
setpixel(25, 18, sb);
setpixel(3, 19, sb);
setpixel(4, 19, sb);
setpixel(5, 19, sb);
setpixel(6, 19, sb);
setpixel(7, 19, sb);
setpixel(8, 19, sb);
setpixel(9, 19, sb);
setpixel(10, 19, sb);
setpixel(18, 19, sb);
setpixel(19, 19, sb);
setpixel(20, 19, sb);
setpixel(21, 19, sb);
setpixel(22, 19, sb);
setpixel(23, 19, sb);
setpixel(24, 19, sb);
setpixel(25, 19, sb);
setpixel(2, 20, sb);
setpixel(3, 20, sb);
setpixel(4, 20, sb);
setpixel(5, 20, sb);
setpixel(6, 20, sb);
setpixel(7, 20, sb);
setpixel(8, 20, sb);
setpixel(9, 20, sb);
setpixel(10, 20, sb);
setpixel(18, 20, sb);
setpixel(19, 20, sb);
setpixel(20, 20, sb);
setpixel(21, 20, sb);
setpixel(22, 20, sb);
setpixel(23, 20, sb);
setpixel(24, 20, sb);
setpixel(25, 20, sb);
setpixel(26, 20, sb);
setpixel(2, 21, sb);
setpixel(3, 21, sb);
setpixel(4, 21, sb);
setpixel(5, 21, sb);
setpixel(6, 21, sb);
setpixel(7, 21, sb);
setpixel(8, 21, sb);
setpixel(9, 21, sb);
setpixel(10, 21, sb);
setpixel(18, 21, sb);
setpixel(19, 21, sb);
setpixel(20, 21, sb);
setpixel(21, 21, sb);
setpixel(22, 21, sb);
setpixel(23, 21, sb);
setpixel(24, 21, sb);
setpixel(25, 21, sb);
setpixel(26, 21, sb);
setpixel(2, 22, sb);
setpixel(3, 22, sb);
setpixel(4, 22, sb);
setpixel(5, 22, sb);
setpixel(6, 22, sb);
setpixel(7, 22, sb);
setpixel(8, 22, sb);
setpixel(10, 22, sb);
setpixel(18, 22, sb);
setpixel(20, 22, sb);
setpixel(21, 22, sb);
setpixel(22, 22, sb);
setpixel(23, 22, sb);
setpixel(24, 22, sb);
setpixel(25, 22, sb);
setpixel(26, 22, sb);
setpixel(2, 23, sb);
setpixel(3, 23, sc);
setpixel(4, 23, sb);
setpixel(5, 23, sc);
setpixel(6, 23, sb);
setpixel(7, 23, sc);
setpixel(8, 23, sb);
setpixel(10, 23, sb);
setpixel(18, 23, sb);
setpixel(20, 23, sb);
setpixel(21, 23, sc);
setpixel(22, 23, sb);
setpixel(23, 23, sc);
setpixel(24, 23, sb);
setpixel(25, 23, sc);
setpixel(26, 23, sb);
setpixel(2, 24, sb);
setpixel(3, 24, sc);
setpixel(4, 24, sb);
setpixel(5, 24, sc);
setpixel(6, 24, sb);
setpixel(7, 24, sc);
setpixel(8, 24, sb);
setpixel(20, 24, sb);
setpixel(21, 24, sc);
setpixel(22, 24, sb);
setpixel(23, 24, sc);
setpixel(24, 24, sb);
setpixel(25, 24, sc);
setpixel(26, 24, sb);
setpixel(2, 25, sd);
setpixel(3, 25, sc);
setpixel(4, 25, sb);
setpixel(5, 25, sc);
setpixel(6, 25, sb);
setpixel(7, 25, sc);
setpixel(8, 25, sb);
setpixel(20, 25, sb);
setpixel(21, 25, sc);
setpixel(22, 25, sb);
setpixel(23, 25, sc);
setpixel(24, 25, sb);
setpixel(25, 25, sc);
setpixel(26, 25, sd);
setpixel(2, 26, sd);
setpixel(3, 26, sc);
setpixel(4, 26, sb);
setpixel(5, 26, sc);
setpixel(6, 26, sb);
setpixel(7, 26, sc);
setpixel(8, 26, sb);
setpixel(20, 26, sb);
setpixel(21, 26, sc);
setpixel(22, 26, sb);
setpixel(23, 26, sc);
setpixel(24, 26, sb);
setpixel(25, 26, sc);
setpixel(26, 26, sd);
setpixel(2, 27, sd);
setpixel(4, 27, sd);
setpixel(5, 27, sc);
setpixel(6, 27, sb);
setpixel(8, 27, sd);
setpixel(20, 27, sd);
setpixel(22, 27, sb);
setpixel(23, 27, sc);
setpixel(24, 27, sd);
setpixel(26, 27, sd);
setpixel(2, 28, sd);
setpixel(4, 28, sd);
setpixel(6, 28, sd);
setpixel(8, 28, sd);
setpixel(20, 28, sd);
setpixel(22, 28, sd);
setpixel(24, 28, sd);
setpixel(26, 28, sd);
setpixel(2, 29, sd);
setpixel(4, 29, sd);
setpixel(6, 29, sd);
setpixel(8, 29, sd);
setpixel(20, 29, sd);
setpixel(22, 29, sd);
setpixel(24, 29, sd);
setpixel(26, 29, sd);
setpixel(2, 30, sd);
setpixel(4, 30, sd);
setpixel(6, 30, sd);
setpixel(8, 30, sd);
setpixel(20, 30, sd);
setpixel(22, 30, sd);
setpixel(24, 30, sd);
setpixel(26, 30, sd);
setpixel(2, 31, se);
setpixel(4, 31, sd);
setpixel(6, 31, sd);
setpixel(8, 31, sd);
setpixel(20, 31, sd);
setpixel(22, 31, sd);
setpixel(24, 31, sd);
setpixel(26, 31, se);
setpixel(2, 32, se);
setpixel(4, 32, sd);
setpixel(6, 32, sd);
setpixel(9, 32, sd);
setpixel(19, 32, sd);
setpixel(22, 32, sd);
setpixel(24, 32, sd);
setpixel(26, 32, se);
setpixel(3, 33, se);
setpixel(4, 33, sd);
setpixel(6, 33, sd);
setpixel(9, 33, sd);
setpixel(19, 33, sd);
setpixel(22, 33, sd);
setpixel(24, 33, sd);
setpixel(25, 33, se);
setpixel(5, 34, sd);
setpixel(7, 34, sd);
setpixel(10, 34, sd);
setpixel(18, 34, sd);
setpixel(21, 34, sd);
setpixel(23, 34, sd);
setpixel(5, 35, sd);
setpixel(7, 35, sd);
setpixel(21, 35, sd);
setpixel(23, 35, sd);
setpixel(5, 36, sd);
setpixel(7, 36, sd);
setpixel(21, 36, sd);
setpixel(23, 36, sd);
setpixel(6, 37, sd);
setpixel(8, 37, sd);
setpixel(20, 37, sd);
setpixel(22, 37, sd);


for ( int c = 0; c < 37; c++ ) {
    f.erasepixel( 0, c );
}


//</editor-fold>
        
        
    }
    
    
    
}
